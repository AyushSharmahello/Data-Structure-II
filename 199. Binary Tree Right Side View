/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
       
        List<Integer> res = new ArrayList<Integer>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            //initialize the right most element
            TreeNode rightSide = null;
            int size = q.size();

            //go through each element in the level
            for(int i=0;i<size;i++){
                TreeNode node = q.poll();
                
                if(node!=null){
                    rightSide = node;
                    //important: add left node in the queue before adding the right node 
                    q.add(node.left);
                    q.add(node.right);
                }
            }
           
            if(rightSide!=null){
                res.add(rightSide.val);
            }
        }
        return res;
    }
}
