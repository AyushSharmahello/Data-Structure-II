class Solution {
    public int subarraySum(int[] nums, int k) {
        int[] prefixSum = new int[nums.length];
        prefixSum[0] = nums[0];

        for(int i = 1; i < nums.length; i++)
            prefixSum[i] = prefixSum[i-1] + nums[i];

        int counter = 0;

        Map<Integer,Integer> map = new HashMap<>();

        map.put(0,1);

        for(int i=0;i<nums.length;i++)
        {
            if(map.containsKey(prefixSum[i] - k))
            {
                counter+= map.get(prefixSum[i]-k);
            }
            if(map.containsKey(prefixSum[i]))
            {
                map.put(prefixSum[i],map.get(prefixSum[i])+1);
            }
            else
                map.put(prefixSum[i], 1);
        }

        return counter;
    }
}
